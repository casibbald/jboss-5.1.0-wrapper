#!/usr/bin/env bash
###############################################################################
#
# Author     : Charles Sibbald
# Email      : casibbald at gmail dot com
#
###############################################################################

set -eu
set -o pipefail

chmod +x ./lib/config.sh
COMMAND=$1
if [ $1 == '' ]; then
    echo 'Please pass one of the following options: start | stop | kill'
    exit 1
fi

function get_seconds_since_epoch {
    perl -e "print time;"
}

# Normalise scripts running location.
if uname -s | grep CYG > /dev/null 2>&1 ; then
   DOMAIN_DIR=`cygpath -m -a .`
   URI_PREFIX="file:/"
else
   cd "$(dirname "${0}")"
   export DOMAIN_DIR="$(pwd)"
   URI_PREFIX="file:"
fi

. ./lib/config.sh


case "${COMMAND}" in
##############################        start  #################################
    start)

        # Clean up previous temp directories.
        echo "========================================================================="
        echo "   Cleaning up JBoss temporary directories in preparation for JVM Launch"
        echo
        for dir in data log tmp; do
           rm -rf ${SERVER_NAME}/${dir}
        done;
        
        echo "======================================================================="
        echo "  JBOSS_HOME           : $JBOSS_HOME"
        echo "  JAVA_HOME            : $JAVA_HOME"
        echo "  DOMAIN_DIR           : $DOMAIN_DIR"
        echo "  NOHUP_OUT_DIR        : $NOHUP_OUT_DIR"
        echo "  RUNTIME_DIR          : $SERVER_NAME"
        echo "======================================================================="
        echo

        (
        nohup ${JBOSS_HOME}/bin/run.sh -Djboss.server.base.url=${URI_PREFIX}${DOMAIN_DIR} \
              -Djboss.server.base.dir=${DOMAIN_DIR} \
              -Djboss.server.name=${SERVER_NAME} \
              -Djboss.server.apps=${DOMAIN_DIR}/apps \
              -Djboss.server.log.dir=${DOMAIN_DIR}/logs \
              -b 0.0.0.0 \
              -c ${SERVER_NAME} &
        echo $! > $PIDFILE
        ) | cronolog >/dev/null 2>&1 "${NOHUP_OUT_DIR}/nohup.out_%Y%m%d_%H" &


     ;;

    stop)
    
    ;;

Ê Ê kill)
 Ê Ê Ê if [ -f "${PIDFILE}" ] ; then
 Ê Ê Ê Ê Ê Ê ÊPID=`cat ${PIDFILE}`
 Ê Ê Ê Ê Ê Ê Êif [ -n "${PID}" ] ; then
 Ê Ê Ê Ê Ê Ê Ê Ê PID_STATUS=`ps -p "${PID}" |grep -v "PID"`
 Ê Ê Ê Ê Ê Ê Ê Ê if [ "${PID_STATUS}" = "" ] ; then
 Ê Ê Ê Ê Ê Ê Ê Ê Ê ÊPID_STATUS="0"
 Ê Ê Ê Ê Ê Ê Ê Ê else
 Ê Ê Ê Ê Ê Ê Ê Ê Ê ÊPID_STATUS="1"
 Ê Ê Ê Ê Ê Ê Ê Ê fi
 Ê Ê Ê Ê Ê Ê Êelse
 Ê Ê Ê Ê Ê Ê Ê Ê echo "No PID found in ${PIDFILE}"
 Ê Ê Ê Ê Ê Ê Êfi
 Ê Ê Ê Ê Ê Ê Êif [ "$PID_STATUS" = "1" ] ; then
 Ê Ê Ê Ê Ê Ê Ê Ê Êecho " Ê Ê Killing JBoss at PID ${PID} ..."
 Ê Ê Ê Ê Ê Ê Ê Ê Êkill -9 ${PID}
 Ê Ê Ê Ê Ê Ê Ê Ê Êrm -f ${PIDFILE}

 Ê Ê Ê Ê Ê Ê Ê Ê Êexit 0
 Ê Ê Ê Ê Ê Ê Êelse
 Ê Ê Ê Ê Ê Ê Ê Ê Êecho "PID file indicates PID ${PID}, which is not running."
 Ê Ê Ê Ê Ê Ê Ê Ê Êexit 0
 Ê Ê Ê Ê Ê Ê Êfi
 Ê Ê Ê Ê Êelse
 Ê Ê Ê Ê Ê Ê Êecho "No Êpid file available."
 Ê Ê Ê Ê Ê Ê Êexit 0
 Ê Ê Ê Ê Êfi
 Ê Ê;;


esac


